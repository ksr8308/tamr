# hive:
#   - source: "legacy"
#     getAllDatabases: "SHOW DATABASES"
#     getAllTables: "SHOW TABLES IN {}"
#     getAllColumns: "SHOW COLUMNS IN {}"
#     getTableRowCnt: "SELECT COUNT(1) FROM {}"
#     getInfoTables : "SELECT * FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE CREATE_DT = (SELECT max(create_dt) FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE SOURCE = '{}') AND SOURCE = '{}' ORDER BY ROW_CNT * COL_CNT"
#     getSampleTables: "SELECT * FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE CREATE_DT = (SELECT max(create_dt) FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE SOURCE = '{source}') AND SOURCE = '{source}' ORDER BY ROW_CNT * COL_CNT"
#     getLastModDt : "SELECT max(lake_load_tm) from {}"
oracle:
  - source: "legacy"
    getAllTables: "SELECT TABLE_NAME from all_tables WHERE owner = 'PND'"
    getAllColumns: "SELECT DISTINCT TABLE_NAME, COLUMN_NAME FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = '{}' AND TABLE_NAME IN (SELECT DISTINCT TABLE_NAME FROM USER_SYNONYMS) ORDER BY COLUMN_NAME"
    getInfoTables: "SELECT 'ORACLE' AS DB_TYPE, 'SMARTDA' AS DB_NAME, 'MDM' AS SOURCE, A.TABLE_NAME AS TABLE_NAME, A.TABLE_NAME AS ORIGIN_TABLE_NAME, SUM(NVL(A.NUM_ROWS, 0)) AS ROW_CNT, AVG(NVL(B.COLUMN_CNT, 0)) AS COL_CNT, TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS CREATE_DT, 0 AS IS_RELOAD, '' AS COLUMN_NAMES FROM ALL_TABLES A, (SELECT DISTINCT TABLE_NAME, COUNT(COLUMN_NAME) AS COLUMN_CNT FROM ALL_TAB_COLUMNS WHERE TABLE_NAME IN (	SELECT TABLE_NAME FROM USER_SYNONYMS ) GROUP BY TABLE_NAME) B WHERE A.TABLE_NAME = B.TABLE_NAME GROUP BY A.TABLE_NAME, TO_CHAR(SYSDATE, 'YYYY-MM-DD') ORDER BY A.TABLE_NAME"    
    getSampleTables: "SELECT 'LEGACY' AS DB_NAME , TABLE_NAME from all_tables WHERE owner = 'PND'"
    getTableColumns: "select distinct table_name, column_name, table_name || '-' || column_name as table_column, sys_gbn_cd, mst_typ_eng, table_ko_nm, attr_en_nm, col_ko_nm, col_desc, key_dom_nm from all_tab_columns a, (SELECT  table_nm, col_nm, SYS_GBN_CD, MST_TYP_ENG, TABLE_KO_NM, ATTR_EN_NM, COL_KO_NM, COL_DESC, key_dom_nm FROM V_GMDM_TABLE_SPEC spec, V_DA_STD_TERM dic where spec.col_nm = dic.dic_phy_nm (+)) b where a.table_name = b.table_nm (+) and a.column_name = b.col_nm (+) and table_name in (SELECT distinct TABLE_NAME FROM USER_SYNONYMS)"
  # - source: "mdm"
  #   getAllTables: "SELECT TABLE_NAME FROM USER_SYNONYMS ORDER BY TABLE_NAME"
  #   getAllColumns: "SELECT DISTINCT TABLE_NAME, COLUMN_NAME FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = '{}' AND TABLE_NAME IN (SELECT DISTINCT TABLE_NAME FROM USER_SYNONYMS) ORDER BY COLUMN_NAME"
  #   getInfoTables: "SELECT 'ORACLE' AS DB_TYPE, 'SMARTDA' AS DB_NAME, 'MDM' AS SOURCE, A.TABLE_NAME AS TABLE_NAME, A.TABLE_NAME AS ORIGIN_TABLE_NAME, SUM(NVL(A.NUM_ROWS, 0)) AS ROW_CNT, AVG(NVL(B.COLUMN_CNT, 0)) AS COL_CNT, TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS CREATE_DT, 0 AS IS_RELOAD, '' AS COLUMN_NAMES FROM ALL_TABLES A, (SELECT DISTINCT TABLE_NAME, COUNT(COLUMN_NAME) AS COLUMN_CNT FROM ALL_TAB_COLUMNS WHERE TABLE_NAME IN (	SELECT TABLE_NAME FROM USER_SYNONYMS ) GROUP BY TABLE_NAME) B WHERE A.TABLE_NAME = B.TABLE_NAME GROUP BY A.TABLE_NAME, TO_CHAR(SYSDATE, 'YYYY-MM-DD') ORDER BY A.TABLE_NAME"    
  #   getSampleTables: "SELECT * FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE CREATE_DT = (SELECT max(create_dt) FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE SOURCE = '{source}') AND SOURCE = '{source}' ORDER BY ROW_CNT * COL_CNT"
  #   getTableColumns: "select distinct table_name, column_name, table_name || '-' || column_name as table_column, sys_gbn_cd, mst_typ_eng, table_ko_nm, attr_en_nm, col_ko_nm, col_desc, key_dom_nm from all_tab_columns a, (SELECT  table_nm, col_nm, SYS_GBN_CD, MST_TYP_ENG, TABLE_KO_NM, ATTR_EN_NM, COL_KO_NM, COL_DESC, key_dom_nm FROM V_GMDM_TABLE_SPEC spec, V_DA_STD_TERM dic where spec.col_nm = dic.dic_phy_nm (+)) b where a.table_name = b.table_nm (+) and a.column_name = b.col_nm (+) and table_name in (SELECT distinct TABLE_NAME FROM USER_SYNONYMS)"
  # - source: "mixed"    
  #   getAllTables: "SELECT 'TGF_MATL_M__' || MATL_GRP_DET_GBN_CD || '__' || TECH_ATTR_GBN_CD AS TABLE_NAME FROM TGF_MATLTECHATTRNM_I WHERE TECH_COL_ID NOT IN ('ZTECH97', 'ZTECH98', 'ZTECH99') GROUP BY MATL_GRP_DET_GBN_CD, TECH_COL_ID, TECH_ATTR_GBN_CD, TECH_ATTR_NM ORDER BY MATL_GRP_DET_GBN_CD, TECH_COL_ID, TECH_ATTR_GBN_CD"
  #   getAllColumns: "SELECT 'TGF_MATL_M__' || MATL_GRP_DET_GBN_CD || '__' || TECH_ATTR_GBN_CD AS TABLE_NAME, UPPER(TECH_ATTR_NM) AS COLUMN_NAME FROM TGF_MATLTECHATTRNM_I WHERE 'TGF_MATL_M__' || MATL_GRP_DET_GBN_CD || '__' || TECH_ATTR_GBN_CD = '{}' AND TECH_COL_ID NOT IN ('ZTECH97', 'ZTECH98', 'ZTECH99') GROUP BY MATL_GRP_DET_GBN_CD, TECH_COL_ID, TECH_ATTR_GBN_CD, TECH_ATTR_NM ORDER BY MATL_GRP_DET_GBN_CD, TECH_COL_ID, TECH_ATTR_GBN_CD"
  #   getInfoTables: "SELECT DISTINCT 'ORACLE' AS DB_TYPE, 'GMDMADM' AS DB_NAME, 'MIXED' AS SOURCE, 'TGF_MATL_M__' || M.MATL_GRP_DET_GBN_CD || '__' || M.TECH_ATTR_GBN_CD AS TABLE_NAME, 'TGF_MATL_M__' || M.MATL_GRP_DET_GBN_CD || '__' || M.TECH_ATTR_GBN_CD AS ORIGIN_TABLE_NAME, C.COL_CNT, R.ROW_CNT, TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS CREATE_DT, 0 AS IS_RELOAD, '' AS COLUMN_NAMES FROM GMDMADM.TGF_MATLTECHATTRNM_I M, (SELECT MATL_GRP_DET_GBN_CD, TECH_ATTR_GBN_CD, COUNT(*) + 36 AS COL_CNT FROM GMDMADM.TGF_MATLTECHATTRNM_I GROUP BY MATL_GRP_DET_GBN_CD, TECH_ATTR_GBN_CD) C, (SELECT MATL_GRP_DET_GBN_CD, TECH_ATTR_GBN_CD, COUNT(*) AS ROW_CNT FROM GMDMADM.TGF_MATL_M GROUP BY MATL_GRP_DET_GBN_CD, TECH_ATTR_GBN_CD) R WHERE M.MATL_GRP_DET_GBN_CD = C.MATL_GRP_DET_GBN_CD AND M.TECH_ATTR_GBN_CD = C.TECH_ATTR_GBN_CD AND M.MATL_GRP_DET_GBN_CD = R.MATL_GRP_DET_GBN_CD AND M.TECH_ATTR_GBN_CD = R.TECH_ATTR_GBN_CD AND M.TECH_COL_ID NOT IN ('ZTECH97', 'ZTECH98', 'ZTECH99')"    
  #   getSampleTables: "SELECT * FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE CREATE_DT = (SELECT max(create_dt) FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE SOURCE = '{source}') AND SOURCE = '{source}' ORDER BY ROW_CNT * COL_CNT"
  #   getTableColumns: "select 'TGF_MATL_M__' || matl_grp_det_gbn_cd || '__' || tech_attr_gbn_cd as TABLE_NAME, 'TGF_MATL_M__' || matl_grp_det_gbn_cd || '__' || tech_attr_gbn_cd || '-' || UPPER(tech_attr_nm) as TABLE_COLUMN, matl_grp_det_gbn_cd, tech_attr_gbn_cd, tech_col_id, tech_attr_nm as ATTR_EN_NM  from TGF_MATLTECHATTRNM_I where tech_col_id not in ('ZTECH97', 'ZTECH98', 'ZTECH99') group by matl_grp_det_gbn_cd, tech_col_id, tech_attr_gbn_cd, tech_attr_nm order by matl_grp_det_gbn_cd, tech_col_id, tech_attr_gbn_cd"
  # - source: "tamr"
  #   getAllTables: "SELECT DISTINCT TABLE_NAME FROM TAMR_PROFILED ORDER BY TABLE_NAME"
  #   getAllColumns: "SELECT TABLE_NAME, COLUMN_NAME FROM TAMR_PROFILED WHERE TABLE_NAME = '{}' ORDER BY COLUMN_NAME"
  #   getInfoTables: "SELECT 'ORACLE' AS DB_TYPE, 'SMARTDA' AS DB_NAME, 'TAMR' AS SOURCE, TABLE_NAME, TABLE_NAME AS ORIGIN_TABLE_NAME, AVG(RECORD_COUNT) AS ROW_CNT, COUNT(COLUMN_NAME) AS COL_CNT, TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS CREATE_DT, 0 AS IS_RELOAD, '' AS COLUMN_NAMES FROM TAMR_PROFILED WHERE SOURCE = 'LEGACY' GROUP BY TABLE_NAME ORDER BY TABLE_NAME"    
  #   getColumnDictLegacy: "SELECT DIC_LOG_NM, KEY_DOM_NM, DIC_PHY_NM,DOM_GRP_NM,DOM_TYPE_NM,DATA_TYPE_NM,DATA_LEN,DIC_DESC from V_DA_STD_TERM"
    # getTamrMetadata: "SELECT DISTINCT TABLE_NAME AS TABLENAME FROM TAMR_METADATA WHERE CREATE_DT = (SELECT MAX(CREATE_DT) FROM TAMR.TAMR_METADATA) ORDER BY TABLE_NAME"
  #   getSystemFromTable: "SELECT NVL(S.APP_NM, M.SYS_NM) AS SYSTEM_NM, M.LAKE_TABLE_NM FROM TMR_LAKELEGACYMAPP_I M, DAP_DBACCT_I A, DAP_SYS_M S WHERE M.INSTC_ID = A.INSTC_ID(+) AND M.ACCT_ID = A.ACCT_ID(+) AND A.APP_SNO = S.APP_SNO(+)"
  #   getTableColumns: "SELECT TABLE_NAME, COLUMN_NAMES1, COLUMN_NAMES2 FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE CREATE_DT = (SELECT max(create_dt) FROM TAMR.TEST_TAMR_TABLE_STATUS WHERE SOURCE = '{source}') AND SOURCE = '{source}' ORDER BY TABLE_NAME"

    # getMaxVersionClusterSchemaHist: "select nvl(max(ver),0) + 1 as version from mdm_clusters_schema_hist"
    # getMaxSeqNotification: "select nvl(max(msg_seq),0) + 1 as seq from cube_bot_msg"    
    # getMixedTables: "select table_name, column_name, table_name || '-' || column_name as table_column from tamr_mixed_tables"
    # insert_mdm_clusters_schema_hist: "insert into mdm_clusters_schema_hist (entity_id,origin_source_id,origin_entity_id,business_type,distinct_value_count,column_name,max_value,column_name_tokenized,empty_value_count,min_value,table_name,column_name_tokenized_std,fab,record_count,system_name,cluster_name,persistent_id,col_ko_nm,ver,create_dt,col_desc,top_100_values,pattern,source_id,attr_en_nm,column_type,top_n_values,non_numeric_top_values,numeric_top_values) values (:entityid,:originsourceid,:originentityid,:business_type,:distinct_value_count,:column_name,:max_value,:column_name_tokenized,:empty_value_count,:min_value,:table_name,:column_name_tokenized_std,:fab,:record_count,:system_name,:clustername,:persistentid,:col_ko_nm,:ver,:create_dt,:col_desc,:top_100_values,:pattern,:sourceid,:attr_en_nm,:column_type,:top_n_values,:non_numeric_top_values,:numeric_top_values)"
    # insert_mdm_clusters_schema: "insert into mdm_clusters_schema (entity_id,origin_source_id,origin_entity_id,business_type,distinct_value_count,column_name,max_value,column_name_tokenized,empty_value_count,min_value,table_name,column_name_tokenized_std,fab,record_count,system_name,cluster_name,persistent_id,create_dt,column_type,top_100_values,locked) values (:entityid,:originsourceid,:originentityid,:business_type,:distinct_value_count,:column_name,:max_value,:column_name_tokenized,:empty_value_count,:min_value,:table_name,:column_name_tokenized_std,:fab,:record_count,:system_name,:clustername,:persistentid,:create_dt,:column_type,substrb(nvl(:top_100_values, ' '), 0, 4000),:locked)"
    # insert_top_values: "insert into mdm_top_values_cnt (persistent_id, table_name, column_name, value_name, value_count, record_count, distinct_count, value_ratio, create_dt) values (:persistent_id,:table_name,:column_name,:value_name,:value_count,:record_count,:distinct_count,to_number(:value_ratio),:create_dt)"
    # insert_mdm_clusters_master: "insert into mdm_clusters_master (persistent_id,cluster_name,cluster_full_name,cluster_alias,create_dt) values (:persistentid,:cluster_name,:cluster_full_name,:cluster_alias,:create_dt)"
    # insert_tamr_metadata: "insert into tamr_metadata (source,column_name,table_name,column_type,tamr_profiling_seq,empty_value_count,min_value,mean_value,max_value,std_dev_value,record_count,distinct_value_count,tamrseq,top_100_values,top_100_freq,create_dt) values (:source,:columnname,:tablename,:columntype,:tamr_profiling_seq,:emptyvaluecount,:minvalue,:meanvalue,:maxvalue,:stddevvalue,:recordcount,:distinctvaluecount,:tamrseq,:top100values,:top100frequencies,:create_dt)"
    # insert_tamr_profiled: "insert into tamr_profiled (source,column_name,table_name,column_type,tamr_profiling_seq,empty_value_count,min_value,mean_value,max_value,std_dev_value,record_count,distinct_value_count,tamrseq,column_name_tokenized,business_type,length,keys,sys_gbn_cd,mst_typ_eng,col_desc,col_ko_nm,attr_en_nm,create_dt,top_n_values) values (:source,:ColumnName,:TableName,:ColumnType,:tamr_profiling_seq,:emptyvaluecount,:minvalue,:meanvalue,:maxvalue,:stddevvalue,:recordcount,:distinctvaluecount,:tamrseq,:column_name_tokenized,:business_type,:length,:keys,:sys_gbn_cd,:mst_typ_eng,:col_desc,:col_ko_nm,:attr_en_nm,:create_dt,:top_n_values)"
    # insert_tamr_mixed_tables: "insert into tamr_mixed_tables (table_name,column_name,create_dt) select :table_name, :column_name, :create_dt from dual where not exists (select 0 from tamr_mixed_tables where table_name = :table_name and column_name = :column_name)"
    # insert_tamr_table_status: "insert into test_tamr_table_status (db_type,db_name,source,table_name,origin_table_name,row_cnt,col_cnt,create_dt,is_reload,column_names1,column_names2) select :DB_TYPE, :DB_NAME, :SOURCE, :TABLE_NAME, :ORIGIN_TABLE_NAME, :ROW_CNT, :COL_CNT, :CREATE_DT, :IS_RELOAD, :COLUMN_NAMES1, :COLUMN_NAMES2 from dual where not exists (select 0 from test_tamr_table_status where db_type = :DB_TYPE and source = :SOURCE and table_name = :TABLE_NAME and create_dt = :CREATE_DT)"
    # insert_tamr_notifications: "insert into cube_bot_msg (msg_seq,bot_no,bot_token,msg_title,msg_cont,chnl_type,chnl_id,msg_type,eai_yn) values (:msg_seq,'X9800074','X9800074-48F39684-0F45-43F2-945E-DA02E93223D2',:msg_title,:msg_cont,:chnl_type,:chnl_id,:msg_type,'N')"
    # insert_data_ui: "DAPADM.PKG_TMR.SYNC_ALL"
    # update_tamr_cluster_master_publish_date: "update mdm_clusters_master set publish_dt = :publish_dt where persistent_id = :persistentid"    
    # #get_tamr_profiled: "select 'SMARTDA' as db_name, 'LEGACY_TAMR' as type, table_name, table_name as origin_table_name, avg(record_count) as row_cnt, count(column_name) as col_cnt, to_char(sysdate, 'YYYY-MM-DD') as create_dt from tamr_profiled where source = 'LEGACY' group by table_name order by table_name"    
    # delete_mdm_clusters_schema: "delete mdm_clusters_schema"
    # delete_mdm_clusters_schema_hist: "delete mdm_clusters_schema_hist where create_dt < add_months(sysdate, -6)"
    # delete_top_values: "delete mdm_top_values_cnt"
    # delete_mdm_clusters_master: "delete mdm_clusters_master"
    # delete_mdm_publish_date: "delete mdm_clusters_pub_dt" 
    # delete_tamr_metadata: "delete tamr_metadata"
    # delete_tamr_profiled: "delete tamr_profiled"
    # delete_tamr_table_status: "delete test_tamr_table_status where create_dt < add_months(sysdate, -12)"